{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/item-add/item-add.component.css","webpack:///./src/app/components/item-add/item-add.component.html","webpack:///./src/app/components/item-add/item-add.component.ts","webpack:///./src/app/components/item-detail/item-detail.component.css","webpack:///./src/app/components/item-detail/item-detail.component.html","webpack:///./src/app/components/item-detail/item-detail.component.ts","webpack:///./src/app/components/item-edit/item-edit.component.css","webpack:///./src/app/components/item-edit/item-edit.component.html","webpack:///./src/app/components/item-edit/item-edit.component.ts","webpack:///./src/app/components/list/list.component.css","webpack:///./src/app/components/list/list.component.html","webpack:///./src/app/components/list/list.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/signin/signin.component.css","webpack:///./src/app/components/signin/signin.component.html","webpack:///./src/app/components/signin/signin.component.ts","webpack:///./src/app/services/item/item.service.ts","webpack:///./src/app/services/user/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ListComponent } from './components/list/list.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ItemDetailComponent } from './components/item-detail/item-detail.component';\nimport { ItemEditComponent } from './components/item-edit/item-edit.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { SigninComponent } from './components/signin/signin.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/', pathMatch: 'full' },\n  { path: 'items', component: DashboardComponent },\n  { path: 'items/:id', component: ItemDetailComponent },\n  { path: 'items/:id/edit', component: ItemEditComponent }\n  // { path: 'register', component: RegisterComponent },\n  // { path: 'signin', component: SigninComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".justify-content-center{\\r\\n    padding: 0 4rem;\\r\\n}\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"justify-content-center\\\">\\n\\n    <router-outlet></router-outlet>\\n    <flash-messages></flash-messages>\\n\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ListComponent } from './components/list/list.component';\nimport { ItemAddComponent } from './components/item-add/item-add.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RegisterComponent } from './components/register/register.component';\nimport { FormsModule } from '@angular/forms';\nimport { UserService } from './services/user/user.service';\nimport { ItemService } from './services/item/item.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ItemDetailComponent } from './components/item-detail/item-detail.component';\nimport { ItemEditComponent } from './components/item-edit/item-edit.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { SigninComponent } from './components/signin/signin.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    ListComponent,\n    ItemAddComponent,\n    RegisterComponent,\n    ItemDetailComponent,\n    ItemEditComponent,\n    DashboardComponent,\n    SigninComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    FlashMessagesModule,\n    AppRoutingModule\n  ],\n  providers: [\n    UserService,\n    ItemService,\n    FlashMessagesService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-5\\\">\\n    <app-item-add [items]=\\\"items\\\" [createdItem]=\\\"createdItem\\\"></app-item-add>\\n  </div>\\n  <div class=\\\"col-lg-7\\\">\\n    <app-list [items]=\\\"items\\\" [createdItem]=\\\"createdItem\\\"></app-list>\\n  </div>\\n  <button (click)=\\\"printItem()\\\">OK</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\n\nexport class DashboardComponent implements OnInit {\n  items=[];\n  createdItem = { title: '' };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  // fetch all\n\n  // createItem\n\n  // updateList\n\n  printItem() {\n    console.log(JSON.stringify(this.createdItem.title));\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form>\\n  <div>\\n    <label for=\\\"itemTitle\\\">Title</label>\\n    <input [(ngModel)]=\\\"createdItem.title\\\" name=\\\"title\\\" id=\\\"title\\\" (change)=\\\"checkInputEmply()\\\" class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"What to buy...\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"itemNote\\\">Notes</label>\\n    <textarea [(ngModel)]=\\\"createdItem.note\\\" name=\\\"note\\\" id=\\\"itemNote\\\" class=\\\"form-control\\\" rows=\\\"2\\\"></textarea>\\n  </div>\\n  <button (click)=\\\"addItem()\\\" class=\\\"btn disabled\\\" type=\\\"submit\\\" id=\\\"okBtn\\\">Add</button>\\n  <button class=\\\"btn btn-light\\\">Cancel</button>\\n</form>\\n<br/>\\n<!-- <flash-messages></flash-messages> -->\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ItemService } from '../../services/item/item.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-item-add',\n  templateUrl: './item-add.component.html',\n  styleUrls: ['./item-add.component.css']\n})\nexport class ItemAddComponent implements OnInit {\n  @Input() items;\n  @Input() createdItem = { title: '' };\n  \n  constructor(private itemService: ItemService,\n    private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n\n  }\n\n  addItem() {\n\n    if (this.createdItem.title.length > 0) {\n      this.itemService.addItem(this.createdItem).subscribe((data) => {\n        this.clearFields();\n        this.flashMessage.show('Added', { cssClass: 'alert-success', timeout: 1000 });\n        this.items.unshift(data);        \n      });\n    } else {\n      this.flashMessage.show('Item must have a title', { cssClass: 'alert-danger', timeout: 1000 });\n    }\n  }\n\n  checkInputEmply() {\n\n    const titleInput = document.getElementById(\"title\");\n    const okBtn = document.getElementById(\"okBtn\");\n\n    if (titleInput.textContent.length < 1) {\n      okBtn.classList.add(\"disabled\");\n    } else {\n      okBtn.classList.remove(\"disabled\");\n    }\n  }\n\n  clearFields() {\n    document.getElementsByTagName(\"input\")[0].value = '';\n    this.createdItem = { title: '' };\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"showDetail\\\">\\n  <h1>{{item.title}}</h1>\\n  <h1>{{item.note}}</h1>\\n  <button (click)=\\\"deleteItem()\\\">Delete</button>\\n  <a (click)=\\\"editItem()\\\" class=\\\"nav-item nav-link\\\">EDIT</a>\\n</div>\\n<div *ngIf=\\\"!showDetail\\\">\\n  <form>\\n    <div>\\n      <label for=\\\"itemTitle\\\">Title</label>\\n      <input [(ngModel)]=\\\"item.title\\\" name=\\\"title\\\" id=\\\"itemTitle\\\" class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"What to buy...\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"itemNote\\\">Notes</label>\\n      <textarea [(ngModel)]=\\\"item.note\\\" name=\\\"note\\\" id=\\\"itemNote\\\" class=\\\"form-control\\\" rows=\\\"3\\\"></textarea>\\n    </div>\\n    <div class=\\\"form-check\\\">\\n      <input [(ngModel)]=\\\"item.purchased\\\" name=\\\"purchased\\\" type=\\\"checkbox\\\" checked={{item.purchased}} class=\\\"form-check-input\\\" id=\\\"itemPurchased\\\">\\n      <label class=\\\"form-check-label\\\" for=\\\"itemPurchased\\\">Purchased</label>\\n    </div>\\n    <button (click)=\\\"saveItem()\\\" class=\\\"btn\\\" type=\\\"submit\\\">SAVE</button>\\n    <button (click)=\\\"toggleDisplay()\\\" class=\\\"btn btn-light\\\">Cancel</button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ItemService } from '../../services/item/item.service';\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Title } from '../../../../node_modules/@angular/platform-browser';\n\n@Component({\n  selector: 'app-item-detail',\n  templateUrl: './item-detail.component.html',\n  styleUrls: ['./item-detail.component.css']\n})\nexport class ItemDetailComponent implements OnInit {\n  showDetail = true\n  item = {}\n  itemId = ''\n\n  constructor(private itemService: ItemService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.getItemById();\n  }\n\n  getItemById() {\n    this.route.params.subscribe(params => {\n      const id = params.id;\n      console.log(id);\n\n      this.itemService.getItemById(id).subscribe((data) => {\n        this.item = data;\n        this.itemId = data._id;\n      });\n    });\n  }\n\n  deleteItem() {\n    const result = confirm(\"Want to delete?\");\n    if (result) {\n      this.itemService.deleteItem(this.itemId).subscribe((data) => {\n        console.log('delete item' + data);\n      });\n    }\n    this.showDetail = !this.showDetail;\n  }\n\n  editItem() {\n    this.showDetail = !this.showDetail;\n  }\n\n  saveItem(){\n    this.itemService.updateItem(this.item).subscribe((data) => {\n      // hide from, show detail, show flash\n   this.toggleDisplay();\n    });\n  }\n\n  toggleDisplay(){\n    this.showDetail = !this.showDetail;\n  }\n}\n","module.exports = \"\"","module.exports = \"<form>\\n    <div>\\n      <label for=\\\"itemTitle\\\">Title</label>\\n      <input [(ngModel)]=\\\"item.title\\\" name=\\\"title\\\" id=\\\"itemTitle\\\" class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"What to buy...\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"itemNote\\\">Notes</label>\\n      <textarea [(ngModel)]=\\\"item.note\\\" name=\\\"note\\\" id=\\\"itemNote\\\" class=\\\"form-control\\\" rows=\\\"3\\\"></textarea>\\n    </div>\\n    <button (click)=\\\"saveItem()\\\" class=\\\"btn\\\" type=\\\"submit\\\">SAVE</button>\\n    <button class=\\\"btn btn-light\\\">CANCEL</button>\\n  </form>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-item-edit',\n  templateUrl: './item-edit.component.html',\n  styleUrls: ['./item-edit.component.css']\n})\nexport class ItemEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"/* itemsComponent's private CSS styles */\\r\\n\\r\\n.items {\\r\\n    margin: 0 0 2em 0;\\r\\n    list-style-type: none;\\r\\n    padding: 0 4em;\\r\\n    width: 100%;\\r\\n    height: 80vh;\\r\\n    overflow-y: auto;\\r\\n}\\r\\n\\r\\n.items li {\\r\\n    position: relative;\\r\\n    cursor: pointer;\\r\\n    background-color: #EEE;\\r\\n    margin: .5em;\\r\\n    padding: .3em 0;\\r\\n    height: 1.6em;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n\\r\\n.items li:hover {\\r\\n    font-weight: 600;\\r\\n    color: #607D8B;\\r\\n    background-color: #DDD;\\r\\n    left: .1em;\\r\\n}\\r\\n\\r\\n.items a {\\r\\n    color: #888;\\r\\n    text-decoration: none;\\r\\n    position: relative;\\r\\n    display: block;\\r\\n    width: inherit;\\r\\n}\\r\\n\\r\\n.items a:hover {\\r\\n    color: #607D8B;\\r\\n}\\r\\n\\r\\n.items .badge {\\r\\n    display: inline-block;\\r\\n    font-size: small;\\r\\n    color: white;\\r\\n    padding: 0.8em 0.7em 0 0.7em;\\r\\n    background-color: #607D8B;\\r\\n    line-height: 1em;\\r\\n    position: relative;\\r\\n    left: -1px;\\r\\n    top: -4px;\\r\\n    height: 1.8em;\\r\\n    min-width: 16px;\\r\\n    text-align: right;\\r\\n    margin-right: .8em;\\r\\n    border-radius: 4px 0 0 4px;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n    background-color: #eee;\\r\\n    border: none;\\r\\n    padding: 5px 10px;\\r\\n    border-radius: 4px;\\r\\n    cursor: pointer;\\r\\n    cursor: hand;\\r\\n    font-family: Arial;\\r\\n}\\r\\n\\r\\nbutton:hover {\\r\\n    background-color: #cfd8dc;\\r\\n}\\r\\n\\r\\nbutton.delete {\\r\\n    position: relative;\\r\\n    left: 194px;\\r\\n    top: -32px;\\r\\n    background-color: gray !important;\\r\\n    color: white;\\r\\n}\"","module.exports = \"<ul class=\\\"items\\\">\\n  <li *ngFor=\\\"let item of items\\\" [style.opacity]=\\\"item.purchased ? '0.4': '1'\\\">\\n    <input [(ngModel)]=\\\"item.purchased\\\" name=\\\"purchased\\\" type=\\\"checkbox\\\" checked={{item.purchased}} class=\\\"form-check-input\\\"\\n      id=\\\"itemPurchased\\\">\\n    <a routerLink=\\\"/items/{{item._id}}\\\">\\n      {{item.title}}\\n    </a>\\n  </li>\\n</ul>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ItemService } from '../../services/item/item.service';\n\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  @Input() items;\n  @Input() createdItem;\n\n  constructor(private itemService: ItemService) { }\n\n  ngOnInit() {\n    this.getItems();\n  }\n\n  getItems(): void {\n    \n    this.itemService.getItems()\n      .subscribe(data => {\n        data.forEach(item => {\n          this.items.unshift(item);   \n        });\n        console.log(this.items);\n      });\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">🍅GroceryList</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavAltMarkup\\\" aria-controls=\\\"navbarNavAltMarkup\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavAltMarkup\\\">\\n    <div class=\\\"navbar-nav\\\">\\n      <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/items\\\">Dashboard</a>\\n      <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/\\\">GitHub</a>\\n      <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/\\\">Portfolio</a>\\n    </div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\nimport { UserService } from '../../services/user/user.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private authService: UserService,\n    private router: Router,\n    private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessage.show('Logged out successfully', {\n      cssClass: 'alert-success', timeout: 1500\n    });\n    this.router.navigate(['/signin']);\n    return false;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container col-lg-4\\\">\\n  <h1>Join</h1>\\n  <form (submit)=\\\"registerSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"username\\\">Username</label>\\n      <input [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"Username\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Password\\\">\\n    </div>\\n    <div class=\\\"form-check\\\">\\n      <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"dropdownCheck\\\">\\n      <label class=\\\"form-check-label\\\" for=\\\"dropdownCheck\\\">\\n        Remember me\\n      </label>\\n    </div>\\n    <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\n  </form>\\n  <div class=\\\"dropdown-divider\\\"></div>\\n  <a class=\\\"dropdown-item\\\" routerLink=\\\"/signin\\\">Already have an account? Sign in</a>\\n  <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Forgot password?</a>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from '../../services/user/user.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  @Input() user = {};\n\n  constructor(\n    private userService: UserService,\n    private flashMessage: FlashMessagesService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  registerSubmit() {\n    this.flashMessage.show('', { cssClass: 'alert-danger', timeout: 3000 });\n    this.userService.registerUser(this.user).subscribe(data => {\n      if (data.success) {\n        this.flashMessage.show('You are now registered and can now login', { cssClass: 'alert-success', timeout: 3000 });\n        this.router.navigate(['/items']);\n      } else {\n        this.flashMessage.show('Something went wrong', { cssClass: 'alert-danger', timeout: 3000 });\n        //this.router.navigate(['/register']);\n      }\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container col-lg-4\\\">\\n  <h1>Sign in</h1>\\n    <form (submit)=\\\"signinSubmit()\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"Username\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Password\\\">\\n      </div>\\n      <div class=\\\"form-check\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"dropdownCheck\\\">\\n        <label class=\\\"form-check-label\\\" for=\\\"dropdownCheck\\\">\\n          Remember me\\n        </label>\\n      </div>\\n      <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\n    </form>\\n    <div class=\\\"dropdown-divider\\\"></div>\\n    <a class=\\\"dropdown-item\\\" routerLink=\\\"/register\\\">New around here? Sign up</a>\\n    <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Forgot password?</a>\\n  </div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from '../../services/user/user.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n  @Input() user = { username: '', password: '' };\n\n  constructor(\n    private userService: UserService,\n    private flashMessage: FlashMessagesService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  signinSubmit() {\n    const user = {\n      username: this.user.username,\n      password: this.user.password\n    }\n\n    this.userService.authenticateUser(user).subscribe(data => {\n      if (data.success) {\n        console.log('signin auth' + JSON.stringify(data));\n\n        this.userService.storeUserData(data.token, data.user);\n        this.flashMessage.show('You are now logged in', { cssClass: 'alert-success', timeout: 1500 });\n        this.router.navigate(['items']);\n      } else {\n        this.flashMessage.show(data.msg, { cssClass: 'alert-danger', timeout: 1500 });\n        this.router.navigate(['signin']);\n      }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n//import { Item } from '../../../models/item';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n\n@Injectable({ providedIn: 'root' })\nexport class ItemService {\n\n  //private itemsUrl = 'api/Itemes';  // URL to web api\n  //private ITEMS_URL = 'http://localhost:3000/api/items/';\n  private ITEMS_URL = 'api/items/';\n\n  //private ITEMS_ID_URL = 'http://localhost:3000/items';\n\n  constructor(\n    private http: HttpClient) { }\n\n  /** GET Itemes from the server */\n  getItems(): Observable<any> {\n    return this.http.get<any>(this.ITEMS_URL, httpOptions)\n      .pipe(\n        tap(Itemes => console.log('fetched Itemes' + Itemes))\n      );\n  }\n\n  getItemById(id): Observable<any> {\n    console.log(id);\n    return this.http.get(this.ITEMS_URL + id, httpOptions);\n  }\n\n  addItem(item): Observable<any> {\n    console.log(item);\n    return this.http.post(this.ITEMS_URL, item, httpOptions);\n  }\n\n  updateItem(item): Observable<any> {\n    console.log(item);\n    return this.http.put(this.ITEMS_URL + item._id, item, httpOptions);\n  }\n\n  deleteItem(id): Observable<any>{\n    return this.http.delete(this.ITEMS_URL + id, httpOptions);\n  }\n\n  // /** GET Item by id. Return `undefined` when id not found */\n  // getItemNo404<Data>(id: number): Observable<Item> {\n  //   const url = `${this.itemsUrl}/?id=${id}`;\n  //   return this.http.get<Item[]>(url)\n  //     .pipe(\n  //       map(Itemes => Itemes[0]), // returns a {0|1} element array\n  //       tap(h => {\n  //         const outcome = h ? `fetched` : `did not find`;\n  //         this.log(`${outcome} Item id=${id}`);\n  //       }),\n  //       catchError(this.handleError<Item>(`getItem id=${id}`))\n  //     );\n  // }\n\n  // /** GET Item by id. Will 404 if id not found */\n  // getItem(id: number): Observable<Item> {\n  //   const url = `${this.itemsUrl}/${id}`;\n  //   return this.http.get<Item>(url).pipe(\n  //     tap(_ => this.log(`fetched Item id=${id}`)),\n  //     catchError(this.handleError<Item>(`getItem id=${id}`))\n  //   );\n  // }\n\n  // /* GET Itemes whose name contains search term */\n  // searchItemes(term: string): Observable<Item[]> {\n  //   if (!term.trim()) {\n  //     // if not search term, return empty Item array.\n  //     return of([]);\n  //   }\n  //   return this.http.get<Item[]>(`${this.itemsUrl}/?name=${term}`).pipe(\n  //     tap(_ => this.log(`found Itemes matching \"${term}\"`)),\n  //     catchError(this.handleError<Item[]>('searchItemes', []))\n  //   );\n  // }\n\n  // //////// Save methods //////////\n\n  // /** POST: add a new Item to the server */\n  // addItem (Item: Item): Observable<Item> {\n  //   return this.http.post<Item>(this.itemsUrl, Item, httpOptions).pipe(\n  //     tap((Item: Item) => this.log(`added Item w/ id=${Item.id}`)),\n  //     catchError(this.handleError<Item>('addItem'))\n  //   );\n  // }\n\n  // /** DELETE: delete the Item from the server */\n  // deleteItem (Item: Item | number): Observable<Item> {\n  //   const id = typeof Item === 'number' ? Item : Item.id;\n  //   const url = `${this.itemsUrl}/${id}`;\n\n  //   return this.http.delete<Item>(url, httpOptions).pipe(\n  //     tap(_ => this.log(`deleted Item id=${id}`)),\n  //     catchError(this.handleError<Item>('deleteItem'))\n  //   );\n  // }\n\n  // /** PUT: update the Item on the server */\n  // updateItem (Item: Item): Observable<any> {\n  //   return this.http.put(this.itemsUrl, Item, httpOptions).pipe(\n  //     tap(_ => this.log(`updated Item id=${Item.id}`)),\n  //     catchError(this.handleError<any>('updateItem'))\n  //   );\n  // }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError() {\n    // return (error: any): Observable<T> => {\n\n    //   // TODO: send the error to remote logging infrastructure\n    //   console.error(error); // log to console instead\n\n    //   // TODO: better job of transforming error for user consumption\n    //   // this.log(`${operation} failed: ${error.message}`);\n\n    //   // Let the app keep running by returning an empty result.\n    //   return of(result as T);\n    // };\n  }\n\n  // /** Log a ItemService message with the MessageService */\n  // private log(message: string) {\n  //   this.messageService.add(`ItemService: ${message}`);\n  // }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n//const ENDPOINT = 'http://localhost:3000/users/';\nconst ENDPOINT = 'users/';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  authToken: any;\n  user: any;\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(user): Observable<any> {\n    return this.http.post(ENDPOINT + 'register', user, httpOptions);\n  }\n\n  authenticateUser(user): Observable<any> {\n    return this.http.post(ENDPOINT + 'authenticate', user, httpOptions);\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}